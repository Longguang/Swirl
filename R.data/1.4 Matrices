| Please choose a lesson, or type 0 to return to course menu.

1: Segment 1.1 Fundamentals
2: Segment 1.2 Variables
3: Segment 1.3 Vectors
4: Segment 1.4 Matrices
5: Segment 1.5 Lists and Data Frames
6: Segment 1.6 Logical Vectors and Operators

Selection: 4

  |                                                                                         |   0%

| Would you like to re-watch the video for this segment?

Yes or No? n

  |==================                                                                       |  20%

| Would you like to view the transcript of the code used in this video segment?

Yes or No? n

  |====================================                                                     |  40%

| In Quiz 1.3 you created two numeric vectors, v1 and v2, each of length 4. Combine them together
| to make a matrix with 4 rows and two columns, saving it to a variable "m"

> matrix(v1, v2)
      [,1]
 [1,]  2.0
 [2,]  9.0
 [3,]  3.0
 [4,]  4.5
 [5,]  2.0
 [6,]  9.0
 [7,]  3.0
 [8,]  4.5
 [9,]  2.0
[10,]  9.0
[11,]  3.0
[12,]  4.5
[13,]  2.0
[14,]  9.0
[15,]  3.0
Warning message:
In matrix(v1, v2) :
  data length [4] is not a sub-multiple or multiple of the number of rows [15]

| Keep trying! Or, type info() for more options.

| Use the "cbind" function

> cbind(v1, v2)
      v1 v2
[1,] 2.0 15
[2,] 9.0  4
[3,] 3.0  8
[4,] 4.5 10

| Not exactly. Give it another go. Or, type info() for more options.

| Use the "cbind" function

> skip()

| Entering the following correct answer for you...

> m = cbind(v1, v2)

| You are quite good my friend!

  |=====================================================                                    |  60%

| Add a row to the end of your matrix m, with the values 8 and 12, saving it to the variable m2

> m2 <- rbind(m, c(8, 2))

| Almost! Try again. Or, type info() for more options.

| Use the "rbind" function

> m2
      v1 v2
[1,] 2.0 15
[2,] 9.0  4
[3,] 3.0  8
[4,] 4.5 10
[5,] 8.0  2

| Keep trying! Or, type info() for more options.

| Use the "rbind" function

> m2 <- rbind(m, c(8, 12))

| Nice work!

  |=======================================================================                  |  80%

| Extract the first two rows of m2

> m2[1:2,]
     v1 v2
[1,]  2 15
[2,]  9  4

| All that practice is paying off!

  |=========================================================================================| 100%

| Extract the second column of m2

> m2[2]
[1] 9

| Give it another try. Or, type info() for more options.

| Use square brackets and a comma, putting the indices you want to extract after the comma

> m2[,2]
[1] 15  4  8 10 12

| Keep working like that and you'll get there!